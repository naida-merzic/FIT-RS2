// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eOftamoloskiCentar.Services.Database;

#nullable disable

namespace eOftamoloskiCentar.Services.Migrations
{
    [DbContext(typeof(OftamoloskiCentarContext))]
    partial class OftamoloskiCentarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Artikal", b =>
                {
                    b.Property<int>("ArtikalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtikalId"), 1L, 1);

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VrstaArtiklaId")
                        .HasColumnType("int");

                    b.HasKey("ArtikalId");

                    b.HasIndex("VrstaArtiklaId");

                    b.ToTable("Artikal", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Dijagnoza", b =>
                {
                    b.Property<int>("DijagnozaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DijagnozaId"), 1L, 1);

                    b.Property<int?>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DijagnozaId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Dijagnoza", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.DijagnozaUposlenik", b =>
                {
                    b.Property<int>("DijagnozaUposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Dijagnoza_UposlenikId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DijagnozaUposlenikId"), 1L, 1);

                    b.Property<int?>("DijagnozaId")
                        .HasColumnType("int");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("DijagnozaUposlenikId");

                    b.HasIndex("DijagnozaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Dijagnoza_Uposlenik", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlijentId"), 1L, 1);

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpolId")
                        .HasColumnType("int");

                    b.HasKey("KlijentId");

                    b.HasIndex("SpolId");

                    b.ToTable("Klijent", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Novost", b =>
                {
                    b.Property<int>("NovostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NovostId"), 1L, 1);

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("NovostId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("Novost", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Racun", b =>
                {
                    b.Property<int>("RacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RacunId"), 1L, 1);

                    b.Property<int?>("BrojRacuna")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Iznos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("KlijentId")
                        .HasColumnType("int");

                    b.HasKey("RacunId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Racun", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Rola", b =>
                {
                    b.Property<int>("RolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolaId"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RolaId");

                    b.ToTable("Rola", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Spol", b =>
                {
                    b.Property<int>("SpolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpolId"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SpolId");

                    b.ToTable("Spol", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.StavkaRacuna", b =>
                {
                    b.Property<int>("StavkaRacunaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaRacunaId"), 1L, 1);

                    b.Property<int?>("ArtikalId")
                        .HasColumnType("int");

                    b.Property<int?>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("RacunId")
                        .HasColumnType("int");

                    b.HasKey("StavkaRacunaId");

                    b.HasIndex("ArtikalId");

                    b.HasIndex("RacunId");

                    b.ToTable("StavkaRacuna", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"), 1L, 1);

                    b.Property<DateTime?>("DatumTermina")
                        .HasColumnType("datetime");

                    b.Property<double?>("Dioptrija")
                        .HasColumnType("float");

                    b.Property<int?>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("VrstaPregleda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TerminId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Uposlenik", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UposlenikId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpolId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('FALSE')");

                    b.HasKey("UposlenikId");

                    b.HasIndex("SpolId");

                    b.ToTable("Uposlenik", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.UposlenikRola", b =>
                {
                    b.Property<int>("UposlenikRolaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UposlenikRolaId"), 1L, 1);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int?>("RolaId")
                        .HasColumnType("int");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("UposlenikRolaId");

                    b.HasIndex("RolaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("UposlenikRola", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.VrstaArtikla", b =>
                {
                    b.Property<int>("VrstaArtiklaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaArtiklaId"), 1L, 1);

                    b.Property<string>("NazivArtikla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VrstaArtiklaId");

                    b.ToTable("VrstaArtikla", (string)null);
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Artikal", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.VrstaArtikla", "VrstaArtikla")
                        .WithMany("Artikals")
                        .HasForeignKey("VrstaArtiklaId")
                        .HasConstraintName("FK_Artikal_Vrsta");

                    b.Navigation("VrstaArtikla");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Dijagnoza", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Klijent", "Klijent")
                        .WithMany("Dijagnozas")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Dijagnoza_Klijent");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.DijagnozaUposlenik", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Dijagnoza", "Dijagnoza")
                        .WithMany("DijagnozaUposleniks")
                        .HasForeignKey("DijagnozaId")
                        .HasConstraintName("FK_Dijagnoza_Uposlenik_Dijagnoza");

                    b.HasOne("eOftamoloskiCentar.Services.Database.Uposlenik", "Uposlenik")
                        .WithMany("DijagnozaUposleniks")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_Dijagnoza_Uposlenik_Uposlenik");

                    b.Navigation("Dijagnoza");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Klijent", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Spol", "Spol")
                        .WithMany("Klijents")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("FK_Klijent_Spol");

                    b.Navigation("Spol");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Novost", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Uposlenik", "Uposlenik")
                        .WithMany("Novosts")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_Novost_Uposlenik");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Racun", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Klijent", "Klijent")
                        .WithMany("Racuns")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Racun_Klijent");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.StavkaRacuna", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Artikal", "Artikal")
                        .WithMany("StavkaRacunas")
                        .HasForeignKey("ArtikalId")
                        .HasConstraintName("FK_StavkaRacuna_Artikal");

                    b.HasOne("eOftamoloskiCentar.Services.Database.Racun", "Racun")
                        .WithMany("StavkaRacunas")
                        .HasForeignKey("RacunId")
                        .HasConstraintName("FK_StavkaRacuna_Racun");

                    b.Navigation("Artikal");

                    b.Navigation("Racun");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Termin", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Klijent", "Klijent")
                        .WithMany("Termins")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("FK_Termin_Klijent");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Uposlenik", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Spol", "Spol")
                        .WithMany("Uposleniks")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("FK_Uposlenik_Spol");

                    b.Navigation("Spol");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.UposlenikRola", b =>
                {
                    b.HasOne("eOftamoloskiCentar.Services.Database.Rola", "Rola")
                        .WithMany("UposlenikRolas")
                        .HasForeignKey("RolaId")
                        .HasConstraintName("FK_UposlenikRola_Rola");

                    b.HasOne("eOftamoloskiCentar.Services.Database.Uposlenik", "Uposlenik")
                        .WithMany("UposlenikRolas")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("FK_UposlenikRola_Uposlenik");

                    b.Navigation("Rola");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Artikal", b =>
                {
                    b.Navigation("StavkaRacunas");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Dijagnoza", b =>
                {
                    b.Navigation("DijagnozaUposleniks");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Klijent", b =>
                {
                    b.Navigation("Dijagnozas");

                    b.Navigation("Racuns");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Racun", b =>
                {
                    b.Navigation("StavkaRacunas");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Rola", b =>
                {
                    b.Navigation("UposlenikRolas");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Spol", b =>
                {
                    b.Navigation("Klijents");

                    b.Navigation("Uposleniks");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.Uposlenik", b =>
                {
                    b.Navigation("DijagnozaUposleniks");

                    b.Navigation("Novosts");

                    b.Navigation("UposlenikRolas");
                });

            modelBuilder.Entity("eOftamoloskiCentar.Services.Database.VrstaArtikla", b =>
                {
                    b.Navigation("Artikals");
                });
#pragma warning restore 612, 618
        }
    }
}
